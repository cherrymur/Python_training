{"name": "test_add_group[None:nameC (C:tF;header{x5D;footernT'))2]", "status": "failed", "statusDetails": {"message": "AssertionError: assert [104:;;, 105:...oter \" N, ...] == [104:;;, 105:...oter \" N, ...]\n  Left contains one more item: None:nameC (C:tF;header{x5D;footernT'))2\n  Use -v to get the full diff", "trace": "app = <fixture.application.Application object at 0x03F1E070>, db = <fixture.db.DbFixture object at 0x03EDF850>\njson_groups = None:nameC (C:tF;header{x5D;footernT'))2, check_ui = False\n\n    def test_add_group(app, db, json_groups, check_ui): # json_groups for output in .py\n        group = json_groups\n        with allure.step(\"Given a group list\"):\n            old_groups = db.get_group_list()\n        with allure.step(\"When I add the group %s into the list\" % group):\n            app.group.create(group)\n        with allure.step(\"Then the new group list is equal to the old list with the added group\"):\n            new_groups = db.get_group_list()\n            old_groups.append(group)\n>           assert sorted(old_groups, key=Group.id_or_max) == sorted(new_groups, key=Group.id_or_max)\nE           assert [104:;;, 105:...oter \" N, ...] == [104:;;, 105:...oter \" N, ...]\nE             Left contains one more item: None:nameC (C:tF;header{x5D;footernT'))2\nE             Use -v to get the full diff\n\ntest\\test_add_group.py:14: AssertionError"}, "steps": [{"name": "Given a group list", "status": "passed", "start": 1581606497317, "stop": 1581606497319}, {"name": "When I add the group None:nameC (C:tF;header{x5D;footernT'))2 into the list", "status": "passed", "start": 1581606497319, "stop": 1581606499659}, {"name": "Then the new group list is equal to the old list with the added group", "status": "failed", "statusDetails": {"message": "AssertionError: assert [104:;;, 105:...oter \" N, ...] == [104:;;, 105:...oter \" N, ...]\n  Left contains one more item: None:nameC (C:tF;header{x5D;footernT'))2\n  Use -v to get the full diff\n", "trace": "  File \"C:\\Users\\olga.avramenko\\PycharmProjects\\Python_training\\test\\test_add_group.py\", line 14, in test_add_group\n    assert sorted(old_groups, key=Group.id_or_max) == sorted(new_groups, key=Group.id_or_max)\n"}, "start": 1581606499660, "stop": 1581606499665}], "parameters": [{"name": "json_groups", "value": "None:nameC (C:tF;header{x5D;footernT'))2"}], "start": 1581606497317, "stop": 1581606499666, "uuid": "b36f7262-9609-49f1-8eb5-21cddcb61522", "historyId": "c00a39f66d959716a1284d56260629b5", "testCaseId": "8e9b1d07ef6cdb67de3c4a3d82e10652", "fullName": "test.test_add_group#test_add_group", "labels": [{"name": "parentSuite", "value": "test"}, {"name": "suite", "value": "test_add_group"}, {"name": "host", "value": "DESKTOP-EHICCDB"}, {"name": "thread", "value": "33176-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.test_add_group"}]}